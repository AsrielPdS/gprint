"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.transform = exports.numbInFull = exports.inFull = void 0;
exports.inFull = [
    { v: 0, exp: () => 'zero' },
    { v: 1, exp: (_, o) => o.g == 'f' ? 'uma' : 'um' },
    { v: 2, exp: (_, o) => o.g == 'f' ? 'duas' : 'dois' },
    { v: 3, exp: () => 'três' },
    { v: 4, exp: () => 'quatro' },
    { v: 5, exp: () => 'cinco' },
    { v: 6, exp: () => 'seis' },
    { v: 7, exp: () => 'sete' },
    { v: 8, exp: () => 'oito' },
    { v: 9, exp: () => 'nove' },
    { v: 10, exp: () => 'dez' },
    { v: 11, exp: () => 'onze' },
    { v: 12, exp: () => 'doze' },
    { v: 13, exp: () => 'treze' },
    { v: 14, exp: () => 'quatorze' },
    { v: 15, exp: () => 'quinze' },
    { v: 16, exp: () => 'dezasseis' },
    { v: 17, exp: () => 'dezassete' },
    { v: 18, exp: () => 'dezoito' },
    { v: 19, exp: () => 'dezanove' },
    {
        v: 20, exp(n, o, i) {
            let r;
            switch (Math.floor(n / 10)) {
                case 2:
                    r = 'vinte';
                    break;
                case 3:
                    r = 'trinta';
                    break;
                case 4:
                    r = 'quarenta';
                    break;
                case 5:
                    r = 'cinquenta';
                    break;
                case 6:
                    r = 'sessenta';
                    break;
                case 7:
                    r = 'setenta';
                    break;
                case 8:
                    r = 'oitenta';
                    break;
                case 9:
                    r = 'noventa';
                    break;
            }
            let t = n % 10;
            if (t)
                r += ' e ' + o.c(t, o, i - 1);
            return r;
        }
    },
    { v: 100, exp: (n, o, i) => n == 100 ? 'cem' : 'cento e ' + o.c(n - 100, o, i - 1) },
    {
        v: 200, exp(n, o, i) {
            let r;
            switch (Math.floor(n / 100)) {
                case 2:
                    r = 'duzentos';
                    break;
                case 3:
                    r = 'trezentos';
                    break;
                case 4:
                    r = 'quatrocentos';
                    break;
                case 5:
                    r = 'quinhentos';
                    break;
                case 6:
                    r = 'seiscento';
                    break;
                case 7:
                    r = 'setecentos';
                    break;
                case 8:
                    r = 'oitocentos';
                    break;
                case 9:
                    r = 'novecentos';
                    break;
            }
            let t = n % 100;
            if (t)
                r += ' e ' + o.c(t, o, i - 1);
            return r;
        }
    },
    {
        v: 1_000, exp: (n, o, i) => {
            let t1 = Math.floor(n / 1_000), r = t1 == 1 ? 'mil' : o.c(t1, o, i - 1) + ' mil', t2 = n % 1_000;
            if (t2)
                r += ', ' + o.c(t2, o, i - 1);
            return r;
        }
    },
    {
        v: 1_000_000, exp: (n, o, i) => {
            let t1 = Math.floor(n / 1_000_000), r = t1 == 1 ? 'um milhão' : o.c(t1, o, i - 1) + ' milhões', t2 = n % 1_000_000;
            if (t2)
                r += ', ' + o.c(t2, o, i - 1);
            return r;
        }
    },
    {
        v: 1_000_000_000_000, exp: (n, o, i) => {
            let t1 = Math.floor(n / 1_000_000_000_000), r = t1 == 1 ? 'um bilhão' : o.c(t1, o, i - 1) + ' bilhões', t2 = n % 1_000_000_000_000;
            if (t2)
                r += ', ' + o.c(t2, o, i - 1);
            return r;
        }
    },
];
function numbInFull(value, opts) {
    let vals = exports.inFull, int = Math.floor(value), dec = Math.round(value % 1 * 100);
    if (int == 0)
        return vals[0].exp();
    if (!opts)
        opts = {};
    if (!opts.g)
        opts.g = 'm';
    opts.c = (v, opts, i = vals.length - 1) => {
        for (; i > 0; i--) {
            let t = vals[i];
            if (t.v <= v)
                return t.exp(v, opts, i);
        }
    };
    let t = opts.c(int, opts);
    if (opts.p) {
        t += ' ' + (int == 1 && opts.s || opts.p);
        if (dec)
            if (opts.dp) {
                t += ` e ${opts.c(dec, opts)} ${(dec == 1 && opts.ds || opts.dp)}`;
            }
            else {
                throw "not implemented";
            }
    }
    return t.toUpperCase();
}
exports.numbInFull = numbInFull;
function transform(value, format) {
}
exports.transform = transform;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic2NhbGFyLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsic2NhbGFyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUVhLFFBQUEsTUFBTSxHQUFpQjtJQUNsQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sRUFBRTtJQUUzQixFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsSUFBSSxFQUFFO0lBQ2xELEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLEVBQUU7SUFDckQsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDM0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDN0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLEVBQUU7SUFDNUIsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDM0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDM0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDM0IsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFFM0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxLQUFLLEVBQUU7SUFDM0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDNUIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxNQUFNLEVBQUU7SUFDNUIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxPQUFPLEVBQUU7SUFDN0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUU7SUFDaEMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxRQUFRLEVBQUU7SUFDOUIsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUU7SUFDakMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxXQUFXLEVBQUU7SUFDakMsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxTQUFTLEVBQUU7SUFDL0IsRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsRUFBRSxHQUFHLEVBQUUsQ0FBQyxVQUFVLEVBQUU7SUFDaEM7UUFDRSxDQUFDLEVBQUUsRUFBRSxFQUFFLEdBQUcsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUM7WUFDaEIsSUFBSSxDQUFTLENBQUM7WUFDZCxRQUFRLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFO2dCQUMxQixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLE9BQU8sQ0FBQztvQkFBQyxNQUFNO2dCQUMzQixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQztvQkFBQyxNQUFNO2dCQUM1QixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQztvQkFBQyxNQUFNO2dCQUM5QixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFdBQVcsQ0FBQztvQkFBQyxNQUFNO2dCQUMvQixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFVBQVUsQ0FBQztvQkFBQyxNQUFNO2dCQUM5QixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQztvQkFBQyxNQUFNO2dCQUM3QixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQztvQkFBQyxNQUFNO2dCQUM3QixLQUFLLENBQUM7b0JBQUUsQ0FBQyxHQUFHLFNBQVMsQ0FBQztvQkFBQyxNQUFNO2FBQzlCO1lBQ0QsSUFBSSxDQUFDLEdBQUcsQ0FBQyxHQUFHLEVBQUUsQ0FBQztZQUNmLElBQUksQ0FBQztnQkFDSCxDQUFDLElBQUksS0FBSyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUM7WUFDaEMsT0FBTyxDQUFDLENBQUM7UUFDWCxDQUFDO0tBQ0Y7SUFFRCxFQUFFLENBQUMsRUFBRSxHQUFHLEVBQUUsR0FBRyxFQUFFLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUMsSUFBSSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsVUFBVSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLEdBQUcsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFO0lBQ3BGO1FBQ0UsQ0FBQyxFQUFFLEdBQUcsRUFBRSxHQUFHLENBQUMsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO1lBQ2pCLElBQUksQ0FBUyxDQUFDO1lBQ2QsUUFBUSxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUMsRUFBRTtnQkFDM0IsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxVQUFVLENBQUM7b0JBQUMsTUFBTTtnQkFDOUIsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxXQUFXLENBQUM7b0JBQUMsTUFBTTtnQkFDL0IsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxjQUFjLENBQUM7b0JBQUMsTUFBTTtnQkFDbEMsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxZQUFZLENBQUM7b0JBQUMsTUFBTTtnQkFDaEMsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxXQUFXLENBQUM7b0JBQUMsTUFBTTtnQkFDL0IsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxZQUFZLENBQUM7b0JBQUMsTUFBTTtnQkFDaEMsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxZQUFZLENBQUM7b0JBQUMsTUFBTTtnQkFDaEMsS0FBSyxDQUFDO29CQUFFLENBQUMsR0FBRyxZQUFZLENBQUM7b0JBQUMsTUFBTTthQUNqQztZQUNELElBQUksQ0FBQyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUM7WUFDaEIsSUFBSSxDQUFDO2dCQUNILENBQUMsSUFBSSxLQUFLLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsQ0FBQztRQUNYLENBQUM7S0FDRjtJQUNEO1FBQ0UsQ0FBQyxFQUFFLEtBQUssRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ3pCLElBQ0UsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUMxQixDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLE1BQU0sRUFDaEQsRUFBRSxHQUFHLENBQUMsR0FBRyxLQUFLLENBQUM7WUFDakIsSUFBSSxFQUFFO2dCQUNKLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsQ0FBQztRQUNYLENBQUM7S0FDRjtJQUNEO1FBQ0UsQ0FBQyxFQUFFLFNBQVMsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQzdCLElBQ0UsRUFBRSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxHQUFHLFNBQVMsQ0FBQyxFQUM5QixDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsRUFBRSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLFVBQVUsRUFDMUQsRUFBRSxHQUFHLENBQUMsR0FBRyxTQUFTLENBQUM7WUFDckIsSUFBSSxFQUFFO2dCQUNKLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsQ0FBQztRQUNYLENBQUM7S0FDRjtJQUNEO1FBQ0UsQ0FBQyxFQUFFLGlCQUFpQixFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLEVBQUU7WUFDckMsSUFDRSxFQUFFLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLEdBQUcsaUJBQWlCLENBQUMsRUFDdEMsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsR0FBRyxVQUFVLEVBQzFELEVBQUUsR0FBRyxDQUFDLEdBQUcsaUJBQWlCLENBQUM7WUFDN0IsSUFBSSxFQUFFO2dCQUNKLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztZQUNoQyxPQUFPLENBQUMsQ0FBQztRQUNYLENBQUM7S0FDRjtDQUNGLENBQUM7QUFDRixTQUFnQixVQUFVLENBQUUsS0FBYSxFQUFFLElBQTRCO0lBRXJFLElBQ0UsSUFBSSxHQUFHLGNBQU0sRUFDYixHQUFHLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxLQUFLLENBQUMsRUFDdkIsR0FBRyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsS0FBSyxHQUFHLENBQUMsR0FBRyxHQUFHLENBQUMsQ0FBQztJQUVwQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ1YsT0FBTyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUM7SUFDdkIsSUFBSSxDQUFDLElBQUk7UUFDUCxJQUFJLEdBQUcsRUFBRSxDQUFDO0lBQ1osSUFBSSxDQUFDLElBQUksQ0FBQyxDQUFDO1FBQ1QsSUFBSSxDQUFDLENBQUMsR0FBRyxHQUFHLENBQUM7SUFDZixJQUFJLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQW1CLEVBQUUsQ0FBQyxHQUFHLElBQUksQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFLEVBQUU7UUFDdkQsT0FBTyxDQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNoQixJQUFJLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQztnQkFDVixPQUFPLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLElBQUksRUFBRSxDQUFDLENBQUMsQ0FBQztTQUM1QjtJQUNILENBQUMsQ0FBQTtJQUNELElBQUksQ0FBQyxHQUFHLElBQUksQ0FBQyxDQUFDLENBQUMsR0FBRyxFQUFpQixJQUFJLENBQUMsQ0FBQztJQUN6QyxJQUFJLElBQUksQ0FBQyxDQUFDLEVBQUU7UUFDVixDQUFDLElBQUksR0FBRyxHQUFHLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsQ0FBQyxJQUFJLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUMxQyxJQUFJLEdBQUc7WUFDTCxJQUFJLElBQUksQ0FBQyxFQUFFLEVBQUU7Z0JBQ1gsQ0FBQyxJQUFJLE1BQU0sSUFBSSxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQWlCLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxJQUFJLENBQUMsSUFBSSxJQUFJLENBQUMsRUFBRSxJQUFJLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDO2FBRW5GO2lCQUFNO2dCQUNMLE1BQU0saUJBQWlCLENBQUM7YUFDekI7S0FDSjtJQUVELE9BQU8sQ0FBQyxDQUFDLFdBQVcsRUFBRSxDQUFDO0FBZ0J6QixDQUFDO0FBaERELGdDQWdEQztBQUNELFNBQWdCLFNBQVMsQ0FBQyxLQUFVLEVBQUUsTUFBNkI7QUFFbkUsQ0FBQztBQUZELDhCQUVDIn0=